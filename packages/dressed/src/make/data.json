{
  "$schema": "./schema.json",
  "routes": [
    {
      "key": "GetAPIApplicationCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "params?"],
      "overrides": { "name": "listGlobalCommands" },
      "docs": {
        "description": "Fetch all of the global commands for your application.",
        "warns": [
          "The objects returned by this endpoint may be augmented with [additional fields if localization is active](/docs/interactions/application-commands#retrieving-localized-commands)."
        ],
        "see": "/docs/interactions/application-commands.mdx#get-global-application-commands"
      }
    },
    {
      "key": "PostAPIApplicationCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "data"],
      "overrides": { "name": "createGlobalCommand" },
      "docs": {
        "description": "Create a new global command.",
        "warns": [
          "Creating a command with the same name as an existing command for your application will overwrite the old command."
        ],
        "see": "/docs/interactions/application-commands#create-global-application-command"
      }
    },
    {
      "key": "GetAPIApplicationCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.commandId"],
      "overrides": { "name": "getGlobalCommand" },
      "docs": {
        "description": "Fetch a global command for your application.",
        "see": "/docs/interactions/application-commands#get-global-application-command"
      }
    },
    {
      "key": "PatchAPIApplicationCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.commandId", "data"],
      "overrides": { "name": "modifyGlobalCommand" },
      "docs": {
        "description": "Edit a global command.",
        "see": "/docs/interactions/application-commands#edit-global-application-command"
      }
    },
    {
      "key": "DeleteAPIApplicationCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.commandId"],
      "overrides": { "name": "deleteGlobalCommand" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Deletes a global command.",
        "see": "/docs/interactions/application-commands#delete-global-application-command"
      }
    },
    {
      "key": "PutAPIApplicationCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "data"],
      "overrides": { "name": "bulkOverwriteGlobalCommands" },
      "docs": {
        "description": "Takes a list of application commands, overwriting the existing global command list for this application.",
        "dangers": [
          "This will overwrite all types of application commands: slash commands, user commands, and message commands."
        ],
        "see": "/docs/interactions/application-commands#bulk-overwrite-global-application-commands"
      }
    },
    {
      "key": "GetAPIApplicationGuildCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "params?"],
      "docs": {
        "description": "Fetch all of the guild commands for your application for a specific guild.",
        "warns": [
          "The objects returned by this endpoint may be augmented with [additional fields if localization is active](/docs/interactions/application-commands#retrieving-localized-commands)."
        ],
        "see": "/docs/interactions/application-commands#get-guild-application-commands"
      }
    },
    {
      "key": "PostAPIApplicationGuildCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "data"],
      "docs": {
        "description": "Create a new guild command. New guild commands will be available in the guild immediately.",
        "dangers": [
          "Creating a command with the same name as an existing command for your application will overwrite the old command."
        ],
        "see": "/docs/interactions/application-commands#create-guild-application-command"
      }
    },
    {
      "key": "GetAPIApplicationGuildCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "url.commandId"],
      "docs": {
        "description": "Fetch a guild command for your application.",
        "see": "/docs/interactions/application-commands#get-guild-application-command"
      }
    },
    {
      "key": "PatchAPIApplicationGuildCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "url.commandId", "data"],
      "docs": {
        "description": "Edit a guild command. Updates for guild commands will be available immediately.",
        "see": "/docs/interactions/application-commands#edit-guild-application-command"
      }
    },
    {
      "key": "DeleteAPIApplicationGuildCommand",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "url.commandId"],
      "flags": ["returnVoid"],
      "docs": {
        "description": "Delete a guild command.",
        "see": "/docs/interactions/application-commands#delete-guild-application-command"
      }
    },
    {
      "key": "PutAPIApplicationGuildCommands",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "data"],
      "overrides": { "name": "bulkOverwriteGuildCommands" },
      "docs": {
        "description": "Takes a list of application commands, overwriting the existing command list for this application for the targeted guild.",
        "dangers": [
          "This will overwrite **all** types of application commands: slash commands, user commands, and message commands."
        ],
        "see": "/docs/interactions/application-commands#bulk-overwrite-guild-application-commands"
      }
    },
    {
      "key": "GetAPIGuildApplicationCommandsPermissions",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId"],
      "docs": {
        "description": "Fetches permissions for all commands for your application in a guild.",
        "see": "/docs/interactions/application-commands#get-guild-application-command-permissions"
      }
    },
    {
      "key": "GetAPIApplicationCommandPermissions",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "url.commandId"],
      "overrides": { "name": "getGuildCommandPermissions" },
      "docs": {
        "description": "Fetches permissions for a specific command for your application in a guild.",
        "see": "/docs/interactions/application-commands#get-application-command-permissions"
      }
    },
    {
      "key": "PutAPIApplicationCommandPermissions",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.guildId", "url.commandId", "data"],
      "overrides": { "name": "modifyGuildCommandPermissions" },
      "docs": {
        "description": "Edits command permissions for a specific command for your application in a guild.",
        "warns": [
          "This endpoint will overwrite existing permissions for the command in that guild",
          "Deleting or renaming a command will permanently delete all permissions for the command"
        ],
        "see": "/docs/interactions/application-commands#edit-application-command-permissions"
      }
    },
    {
      "key": "GetAPIApplicationRoleConnectionMetadata",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID"],
      "overrides": { "name": "listAppRoleConnectionMetadata" },
      "docs": {
        "description": "Returns a list of [application role connection metadata](/docs/resources/application-role-connection-metadata#application-role-connection-metadata-object) objects for the given application.",
        "see": "/docs/resources/application-role-connection-metadata#get-application-role-connection-metadata-records"
      }
    },
    {
      "key": "PutAPIApplicationRoleConnectionMetadata",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID"],
      "overrides": { "name": "modifyAppRoleConnectionMetadata" },
      "docs": {
        "description": "Updates and returns a list of [application role connection metadata](/docs/resources/application-role-connection-metadata#application-role-connection-metadata-object) objects for the given application.",
        "infos": ["An application can have a maximum of 5 metadata records."],
        "see": "/docs/resources/application-role-connection-metadata#update-application-role-connection-metadata-records"
      }
    },
    {
      "key": "GetCurrentApplication",
      "params": [],
      "overrides": { "name": "getApp" },
      "docs": {
        "description": "Returns the [application](/docs/resources/application#application-object) object associated with the requesting bot user.",
        "see": "/docs/resources/application#get-current-application"
      }
    },
    {
      "key": "PatchCurrentApplication",
      "params": ["data"],
      "overrides": { "name": "modifyApp" },
      "docs": {
        "description": "Edit properties of the app associated with the requesting bot user. Only properties that are passed will be updated.",
        "see": "/docs/resources/application#edit-current-application"
      }
    },
    {
      "key": "GetAPIAuditLog",
      "params": ["url.guildId", "params?"],
      "overrides": { "apiRoute": "guildAuditLog" },
      "docs": {
        "description": "Returns an [audit log](/docs/resources/audit-log#audit-log-object) object for the guild.",
        "infos": [
          "Requires the [`VIEW_AUDIT_LOG`](/docs/topics/permissions#permissions-bitwise-permission-flags) permission."
        ],
        "see": "/docs/resources/audit-log#get-guild-audit-log"
      }
    },
    {
      "key": "GetAPIAutoModerationRules",
      "params": ["url.guildId"],
      "overrides": { "name": "listAutomodRules", "apiRoute": "guildAutoModerationRules" },
      "docs": {
        "description": "Get a list of all rules currently configured for the guild.",
        "infos": [
          "This endpoint requires the `MANAGE_GUILD` [permission](/docs/resources/auto-moderation#auto-moderation-permission-requirements)."
        ],
        "see": "/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild"
      }
    },
    {
      "key": "GetAPIAutoModerationRule",
      "params": ["url.guildId", "url.ruleId"],
      "overrides": { "name": "getAutomodRule", "apiRoute": "guildAutoModerationRule" },
      "docs": {
        "description": "Get a single rule.",
        "infos": [
          "This endpoint requires the `MANAGE_GUILD` [permission](/docs/resources/auto-moderation#auto-moderation-permission-requirements)."
        ],
        "see": "/docs/resources/auto-moderation#get-auto-moderation-rule"
      }
    },
    {
      "key": "PostAPIAutoModerationRule",
      "params": ["url.guildId", "data"],
      "overrides": { "name": "createAutomodRule", "apiRoute": "guildAutoModerationRules" },
      "docs": {
        "description": "Create a new rule.",
        "infos": [
          "This endpoint requires the `MANAGE_GUILD` [permission](/docs/resources/auto-moderation#auto-moderation-permission-requirements)."
        ],
        "see": "/docs/resources/auto-moderation#create-auto-moderation-rule"
      }
    },
    {
      "key": "PatchAPIAutoModerationRule",
      "params": ["url.guildId", "url.ruleId", "data"],
      "overrides": { "name": "modifyAutomodRule", "apiRoute": "guildAutoModerationRule" },
      "docs": {
        "description": "Modify an existing rule.",
        "infos": [
          "This endpoint requires the `MANAGE_GUILD` [permission](/docs/resources/auto-moderation#auto-moderation-permission-requirements)."
        ],
        "see": "/docs/resources/auto-moderation#modify-auto-moderation-rule"
      }
    },
    {
      "key": "DeleteAPIAutoModerationRule",
      "params": ["url.guildId", "url.ruleId"],
      "overrides": { "name": "deleteAutomodRule", "apiRoute": "guildAutoModerationRule" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Delete a rule.",
        "infos": [
          "This endpoint requires the `MANAGE_GUILD` [permission](/docs/resources/auto-moderation#auto-moderation-permission-requirements)."
        ],
        "see": "/docs/resources/auto-moderation#delete-auto-moderation-rule"
      }
    },
    {
      "key": "GetAPIChannel",
      "params": ["url.channelId"],
      "docs": {
        "description": "Get a channel by ID.",
        "see": "/docs/resources/channel#get-channel"
      }
    },
    {
      "key": "PatchAPIChannel",
      "params": ["url.channelId", "data"],
      "docs": {
        "description": "Update a channel's settings.",
        "see": "/docs/resources/channel#modify-channel"
      }
    },
    {
      "key": "DeleteAPIChannel",
      "params": ["url.channelId"],
      "docs": {
        "description": "Delete a channel, or close a private message.",
        "infos": [
          "Requires the `MANAGE_CHANNELS` permission for the guild, or `MANAGE_THREADS` if the channel is a thread.",
          "For Community guilds, the Rules or Guidelines channel and the Community Updates channel cannot be deleted."
        ],
        "warns": [
          "Deleting a guild channel cannot be undone. Use this with caution, as it is impossible to undo this action when performed on a guild channel. In contrast, when used with a private message, it is possible to undo the action by opening a private message with the recipient again."
        ],
        "see": "/docs/resources/channel#deleteclose-channel"
      }
    },
    {
      "key": "PutAPIChannelPermission",
      "params": ["url.channelId", "url.overwriteId"],
      "overrides": { "name": "modifyChannelPermissions" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Edit the channel permission overwrites for a user or role in a channel.",
        "infos": [
          "Only usable for guild channels.",
          "Requires the `MANAGE_ROLES` permission.",
          "Only permissions your bot has in the guild or parent channel (if applicable) can be allowed/denied (unless your bot has a `MANAGE_ROLES` overwrite in the channel)."
        ],
        "see": "/docs/resources/channel#edit-channel-permissions"
      }
    },
    {
      "key": "GetAPIChannelInvites",
      "params": ["url.channelId"],
      "docs": {
        "description": "Returns a list of [invite](/docs/resources/invite#invite-object) objects (with [invite metadata](/docs/resources/invite#invite-metadata-object)) for the channel.",
        "infos": ["Only usable for guild channels.", "Requires the `MANAGE_CHANNELS` permission."],
        "see": "/docs/resources/channel#get-channel-invites"
      }
    },
    {
      "key": "PostAPIChannelInvite",
      "params": ["url.channelId", "data"],
      "overrides": { "apiRoute": "channelInvites" },
      "docs": {
        "description": "Create a new [invite](/docs/resources/invite#invite-object) object for the channel.",
        "infos": ["Only usable for guild channels.", "Requires the `CREATE_INSTANT_INVITE` permission."],
        "see": "/docs/resources/channel#create-channel-invite"
      }
    },
    {
      "key": "DeleteAPIChannelPermission",
      "params": ["url.channelId", "url.overwriteId"],
      "flags": ["returnVoid"],
      "docs": {
        "description": "Delete a channel permission overwrite for a user or role in a channel.",
        "infos": ["Only usable for guild channels.", "Requires the `MANAGE_ROLES` permission."],
        "see": "/docs/resources/channel#delete-channel-permission"
      }
    },
    {
      "key": "PostAPIChannelFollowers",
      "params": ["url.channelId", "data"],
      "overrides": { "name": "followChannel" },
      "docs": {
        "description": "Follow an Announcement Channel to send messages to a target channel.",
        "infos": ["Requires the `MANAGE_WEBHOOKS` permission in the target channel."],
        "see": "/docs/resources/channel#follow-announcement-channel"
      }
    },
    {
      "key": "PostAPIChannelTyping",
      "params": ["url.channelId"],
      "overrides": { "name": "createTypingIndicator" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Post a typing indicator for the specified channel, which expires after 10 seconds.",
        "infos": ["Generally bots should **not** use this route."],
        "see": "/docs/resources/channel#trigger-typing-indicator"
      }
    },
    {
      "key": "PutAPIChannelRecipient",
      "params": ["url.channelId", "url.userId"],
      "overrides": { "name": "addGDMMember" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Adds a recipient to a Group DM using their access token.",
        "see": "/docs/resources/channel#group-dm-add-recipient"
      }
    },
    {
      "key": "DeleteAPIChannelRecipient",
      "params": ["url.channelId", "url.userId"],
      "overrides": { "name": "removeGDMMember" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Removes a recipient from a Group DM.",
        "see": "/docs/resources/channel#group-dm-remove-recipient"
      }
    },
    {
      "key": "PostAPIChannelThreads",
      "params": ["url.channelId", "data", "url.messageId?"],
      "overrides": {
        "name": "createThread",
        "apiRoute": "threads",
        "dataType": "Omit<RESTPostAPIChannelThreadsJSONBody, \"type\"> & { type?: \"Public\" | \"Private\" | number; }",
        "dangerousExtraLogic": "data.type = Number.isNaN(Number(data.type)) ? Number(data.type === \"Public\")+11 : data.type;"
      },
      "docs": {
        "description": "Creates a new thread, include a message ID to start the thread from an existing message.",
        "infos": [
          "When called on a `GUILD_TEXT` channel, creates a `PUBLIC_THREAD`. When called on a `GUILD_ANNOUNCEMENT` channel, creates a `ANNOUNCEMENT_THREAD`.",
          "Does not work on a [`GUILD_FORUM`](/docs/resources/channel#start-thread-in-forum-or-media-channel) or a `GUILD_MEDIA` channel.",
          "The id of the created thread will be the same as the id of the source message, and as such a message can only have a single thread created from it."
        ],
        "see": "/docs/resources/channel#start-thread-from-message"
      }
    },
    {
      "key": "PostAPIGuildForumThreads",
      "params": ["url.channelId", "data"],
      "overrides": {
        "name": "createForumThread",
        "apiRoute": "threads",
        "dataType": "Omit<RESTPostAPIGuildForumThreadsJSONBody, \"message\"> & { message: string | (RESTPostAPIChannelMessageJSONBody & { files?: RawFile[] }) }",
        "imports": ["type RESTPostAPIChannelMessageJSONBody", "type APIThreadChannel", "type APIMessage"],
        "returnType": "APIThreadChannel & { message: APIMessage }",
        "messageKey": ".message"
      },
      "flags": ["hasFiles", "hasStringableContent"],
      "docs": {
        "description": "Creates a new thread in a forum or a media channel, and sends a message within the created thread.",
        "infos": [
          "The type of the created thread is `PUBLIC_THREAD`.",
          "The current user must have the `SEND_MESSAGES` permission (`CREATE_PUBLIC_THREADS` is ignored)."
        ],
        "see": "/docs/resources/channel#start-thread-in-forum-or-media-channel"
      }
    },
    {
      "key": "PutAPIChannelThreadMembers",
      "params": ["url.threadId", "url.userId?"],
      "overrides": { "name": "addThreadMember", "apiRoute": "threadMembers" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Adds a member to a thread.\n * @param memberId Member to add, defaults to self",
        "infos": ["Adding another member requires the ability to send messages in the thread."],
        "see": "/docs/resources/channel#add-thread-member"
      }
    },
    {
      "key": "DeleteAPIChannelThreadMembers",
      "params": ["url.threadId", "url.userId?"],
      "overrides": { "name": "removeThreadMember", "apiRoute": "threadMembers" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Removes a member from a thread.\n * @param memberId Member to remove, defaults to self",
        "infos": [
          "Requires the ability to send messages in the thread.",
          "Removing another member also requires the thread is not archived."
        ],
        "see": "/docs/resources/channel#remove-thread-member"
      }
    },
    {
      "key": "GetAPIChannelThreadMember",
      "params": ["url.threadId", "url.userId", "params?"],
      "overrides": {
        "name": "getThreadMember",
        "apiRoute": "threadMembers"
      },
      "docs": {
        "description": "Returns a [thread member](/docs/resources/channel#thread-member-object) object for the specified user if they are a member of the thread.",
        "infos": [
          "When `with_member` is set to `true`, the thread member object will include a `member` field containing a [guild member](/docs/resources/guild#guild-member-object) object."
        ],
        "see": "/docs/resources/channel#get-thread-member"
      }
    },
    {
      "key": "GetAPIChannelThreadMembers",
      "params": ["url.threadId", "params?"],
      "overrides": {
        "name": "listThreadMembers",
        "apiRoute": "threadMembers"
      },
      "docs": {
        "description": "Returns array of [thread members](/docs/resources/channel#thread-member-object) objects that are members of the thread.",
        "infos": [
          "When `with_member` is set to `true`, the results will be paginated and each thread member object will include a `member` field containing a [guild member](/docs/resources/guild#guild-member-object) object."
        ],
        "warns": [
          "Starting in API v11, this endpoint will always return paginated results. Paginated results can be enabled before API v11 by setting `with_member` to `true`. Read [the changelog](/docs/change-log#thread-member-details-and-pagination) for details.",
          "This endpoint is restricted according to whether the `GUILD_MEMBERS` [Privileged Intent](/docs/events/gateway#privileged-intents) is enabled for your application."
        ],
        "see": "/docs/resources/channel#list-thread-members"
      }
    },
    {
      "key": "GetAPIChannelThreadsArchived",
      "params": ["url.channelId", "url.archivedStatus:\"public\"|\"private\"", "var.joinedOnly?:boolean", "params?"],
      "overrides": {
        "apiRoute": "[joinedOnly ? \"channelJoinedArchivedThreads\" : \"channelThreads\"]",
        "name": "listArchivedThreads",
        "returnType": "RESTGetAPIChannelUsersThreadsArchivedResult",
        "imports": ["type RESTGetAPIChannelUsersThreadsArchivedResult"]
      },
      "docs": {
        "description": "Returns a list of archived threads in the channel. Alternatively, returns a list of joined private threads in the channel.",
        "see": "/docs/resources/channel#list-private-archived-threads"
      }
    },
    {
      "key": "GetAPIGuildEmojis",
      "params": ["url.guildId"],
      "overrides": { "name": "listEmojis" },
      "docs": {
        "description": "Returns a list of [emoji](/docs/resources/emoji#emoji-object) objects for the given guild.",
        "infos": [
          "Includes `user` fields if the bot has the `CREATE_GUILD_EXPRESSIONS` or `MANAGE_GUILD_EXPRESSIONS` permission."
        ],
        "see": "/docs/resources/emoji#list-guild-emojis"
      }
    },
    {
      "key": "GetAPIGuildEmoji",
      "params": ["url.guildId", "url.emojiId"],
      "overrides": { "name": "getEmoji" },
      "docs": {
        "description": "Returns an [emoji](/docs/resources/emoji#emoji-object) object for the given guild and emoji IDs.",
        "infos": [
          "Includes the `user` field if the bot has the `MANAGE_GUILD_EXPRESSIONS` permission, or if the bot created the emoji and has the the `CREATE_GUILD_EXPRESSIONS` permission."
        ],
        "see": "/docs/resources/emoji#get-guild-emoji"
      }
    },
    {
      "key": "PostAPIGuildEmoji",
      "params": ["url.guildId", "data"],
      "overrides": { "apiRoute": "guildEmojis", "name": "createEmoji" },
      "docs": {
        "description": "Create a new emoji for the guild.",
        "infos": [
          "Includes `user` fields if the bot has the `CREATE_GUILD_EXPRESSIONS` or `MANAGE_GUILD_EXPRESSIONS` permission.",
          "We highly recommend that developers use the `.webp` extension when fetching emoji so they're rendered as WebP for maximum performance and compatibility. See the [Emoji Formats](/docs/resources/emoji#emoji-object-emoji-formats) section above for more details."
        ],
        "warns": [
          "Emojis and animated emojis have a maximum file size of 256 KiB. Attempting to upload an emoji larger than this limit will fail and return 400 Bad Request and an error message, but not a [JSON status code](/docs/topics/opcodes-and-status-codes#json)."
        ],
        "see": "/docs/resources/emoji#create-guild-emoji"
      }
    },
    {
      "key": "PatchAPIGuildEmoji",
      "params": ["url.guildId", "url.emojiId", "data"],
      "overrides": { "name": "modifyEmoji" },
      "docs": {
        "description": "Modify the given emoji.",
        "infos": [
          "For emojis created by the current user, requires either the `CREATE_GUILD_EXPRESSIONS` or `MANAGE_GUILD_EXPRESSIONS` permission.",
          "For other emojis, requires the `MANAGE_GUILD_EXPRESSIONS` permission."
        ],
        "see": "/docs/resources/emoji#moify-guild-emoji"
      }
    },
    {
      "key": "DeleteAPIGuildEmoji",
      "params": ["url.guildId", "url.emojiId"],
      "overrides": { "name": "deleteEmoji" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Delete the given emoji.",
        "infos": [
          "For emojis created by the current user, requires either the `CREATE_GUILD_EXPRESSIONS` or `MANAGE_GUILD_EXPRESSIONS` permission.",
          "For other emojis, requires the `MANAGE_GUILD_EXPRESSIONS` permission."
        ],
        "see": "/docs/resources/emoji#delete-guild-emoji"
      }
    },
    {
      "key": "GetAPIApplicationEmojis",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID"],
      "overrides": { "name": "listApplicationEmojis" },
      "docs": {
        "description": "Returns an object containing a list of [emoji](/docs/resources/emoji#emoji-object) objects for the given application under the `items` key.",
        "infos": [
          "Includes a `user` object for the team member that uploaded the emoji from the app's settings, or for the bot user if uploaded using the API."
        ],
        "see": "/docs/resources/emoji#list-application-emojis"
      }
    },
    {
      "key": "GetAPIApplicationEmoji",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.emojiId"],
      "overrides": { "name": "getApplicationEmoji" },
      "docs": {
        "description": "Returns an [emoji](/docs/resources/emoji#emoji-object) object for the given application and emoji IDs.",
        "infos": ["Includes the `user` field."],
        "see": "/docs/resources/emoji#get-application-emoji"
      }
    },
    {
      "key": "PostAPIApplicationEmoji",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "data"],
      "overrides": { "apiRoute": "applicationEmojis", "name": "createApplicationEmoji" },
      "docs": {
        "description": "Create a new emoji for the application.",
        "infos": [
          "We highly recommend that developers use the `.webp` extension when fetching emoji so they're rendered as WebP for maximum performance and compatibility. See the [Emoji Formats](/docs/resources/emoji#emoji-object-emoji-formats) section above for more details."
        ],
        "warns": [
          "Emojis and animated emojis have a maximum file size of 256 KiB. Attempting to upload an emoji larger than this limit will fail and return 400 Bad Request and an error message, but not a [JSON status code](/docs/topics/opcodes-and-status-codes#json)."
        ],
        "see": "/docs/resources/emoji#create-application-emoji"
      }
    },
    {
      "key": "PatchAPIApplicationEmoji",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.emojiId", "data"],
      "overrides": { "name": "modifyApplicationEmoji" },
      "docs": {
        "description": "Modify the given emoji.",
        "see": "/docs/resources/emoji#modify-application-emoji"
      }
    },
    {
      "key": "DeleteAPIApplicationEmoji",
      "params": ["url.applicationId<botEnv.DISCORD_APP_ID", "url.emojiId"],
      "overrides": { "name": "deleteApplicationEmoji" },
      "flags": ["returnVoid"],
      "docs": {
        "description": "Delete the given emoji.",
        "see": "/docs/resources/emoji#delete-application-emoji"
      }
    }
  ]
}
